import { basicIntegrations, defaultScmResolveUrl } from '../helpers.esm.js';
import { readGitLabIntegrationConfigs } from './config.esm.js';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, key + "" , value);
  return value;
};
const _GitLabIntegration = class _GitLabIntegration {
  constructor(integrationConfig) {
    this.integrationConfig = integrationConfig;
  }
  get type() {
    return "gitlab";
  }
  get title() {
    return this.integrationConfig.host;
  }
  get config() {
    return this.integrationConfig;
  }
  resolveUrl(options) {
    return defaultScmResolveUrl(options);
  }
  resolveEditUrl(url) {
    return replaceGitLabUrlType(url, "edit");
  }
};
__publicField(_GitLabIntegration, "factory", ({ config }) => {
  var _a;
  const configs = readGitLabIntegrationConfigs(
    (_a = config.getOptionalConfigArray("integrations.gitlab")) != null ? _a : []
  );
  return basicIntegrations(
    configs.map((c) => new _GitLabIntegration(c)),
    (i) => i.config.host
  );
});
let GitLabIntegration = _GitLabIntegration;
function replaceGitLabUrlType(url, type) {
  return url.replace(/\/\-\/(blob|tree|edit)\//, `/-/${type}/`);
}

export { GitLabIntegration, replaceGitLabUrlType };
//# sourceMappingURL=GitLabIntegration.esm.js.map
