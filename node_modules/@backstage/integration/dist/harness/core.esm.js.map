{"version":3,"file":"core.esm.js","sources":["../../src/harness/core.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HarnessIntegrationConfig } from './config';\n\n/**\n * Given a URL pointing to a file, returns a URL\n * for editing the contents of the data.\n *\n * @remarks\n *\n * Converts\n * from: https://app.harness.io/a/b/src/branchname/path/to/c.yaml\n * or:   https://app.harness.io/a/b/_edit/branchname/path/to/c.yaml\n *\n * @param url - A URL pointing to a file\n * @param config - The relevant provider config\n * @public\n */\nexport function getHarnessEditContentsUrl(\n  config: HarnessIntegrationConfig,\n  url: string,\n) {\n  try {\n    const baseUrl = `https://${config.host}`;\n    const [\n      _blank,\n      _ng,\n      _account,\n      accountId,\n      _module,\n      _moduleName,\n      _org,\n      orgName,\n      _projects,\n      projectName,\n      _repos,\n      repoName,\n      _files,\n      _ref,\n      _branch,\n      ...path\n    ] = url.replace(baseUrl, '').split('/');\n    const pathWithoutSlash = path.join('/').replace(/^\\//, '');\n    return `${baseUrl}/gateway/code/api/v1/repos/${accountId}/${orgName}/${projectName}/${repoName}/+/edit/${pathWithoutSlash}`;\n  } catch (e) {\n    throw new Error(`Incorrect URL: ${url}, ${e}`);\n  }\n}\n\n/**\n * Given a file path URL,\n * it returns an API URL which returns the contents of the file.\n * @remarks\n *\n * Converts\n * from: https://app.harness.io/ng/account/accountId/module/code/orgs/orgName/projects/projName/repos/repoName/files/refMain/~/all-apis.yaml\n * to:   https://app.harness.io/gateway/code/api/v1/repos/accountId/orgName/projName/repoName/+/content/all-apis.yaml?routingId=accountId&include_commit=false&ref=refMain\n *\n * @param url - A URL pointing to a file\n * @param config - The relevant provider config\n * @public\n */\nexport function getHarnessFileContentsUrl(\n  config: HarnessIntegrationConfig,\n  url: string,\n) {\n  try {\n    const baseUrl = `https://${config.host}`;\n    const [\n      _blank,\n      _ng,\n      _account,\n      accountId,\n      _module,\n      _moduleName,\n      _org,\n      orgName,\n      _projects,\n      projectName,\n      _repos,\n      repoName,\n      _files,\n      _ref,\n      _branch,\n      ...path\n    ] = url.replace(baseUrl, '').split('/');\n    const urlParts = url.replace(baseUrl, '').split('/');\n    const refAndPath = urlParts.slice(13);\n    const refIndex = refAndPath.findIndex(item => item === '~');\n    const refString = refAndPath.slice(0, refIndex);\n    const pathWithoutSlash = path.join('/').replace(/^\\//, '');\n    return `${baseUrl}/gateway/code/api/v1/repos/${accountId}/${orgName}/${projectName}/${repoName}/+/raw/${pathWithoutSlash}?routingId=${accountId}&git_ref=${refString}`;\n  } catch (e) {\n    throw new Error(`Incorrect URL: ${url}, ${e}`);\n  }\n}\n\n/**\n * Return request headers for a Harness Code provider.\n *\n * @param config - A Harness Code provider config\n * @public\n */\nexport function getHarnessRequestOptions(config: HarnessIntegrationConfig): {\n  headers?: Record<string, string>;\n} {\n  const headers: Record<string, string> = {};\n  const { token, apiKey } = config;\n\n  if (apiKey) {\n    headers['x-api-key'] = apiKey;\n  } else if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  return {\n    headers,\n  };\n}\n"],"names":[],"mappings":"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"}