import { readGithubIntegrationConfig, readGithubIntegrationConfigs } from './config.esm.js';
import { getGithubFileFetchUrl } from './core.esm.js';
import { GithubIntegration, replaceGithubUrlType } from './GithubIntegration.esm.js';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, key + "" , value);
  return value;
};
const getGitHubFileFetchUrl = getGithubFileFetchUrl;
class GitHubIntegration extends GithubIntegration {
  constructor(integrationConfig) {
    super(integrationConfig);
  }
  get config() {
    return super.config;
  }
}
__publicField(GitHubIntegration, "factory", GithubIntegration.factory);
const readGitHubIntegrationConfig = readGithubIntegrationConfig;
const readGitHubIntegrationConfigs = readGithubIntegrationConfigs;
const replaceGitHubUrlType = replaceGithubUrlType;

export { GitHubIntegration, getGitHubFileFetchUrl, readGitHubIntegrationConfig, readGitHubIntegrationConfigs, replaceGitHubUrlType };
//# sourceMappingURL=deprecated.esm.js.map
