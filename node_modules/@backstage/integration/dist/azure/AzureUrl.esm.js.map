{"version":3,"file":"AzureUrl.esm.js","sources":["../../src/azure/AzureUrl.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VERSION_PREFIX_GIT_BRANCH = 'GB';\n\nexport class AzureUrl {\n  /**\n   * Parses an azure URL as copied from the browser address bar.\n   *\n   * Throws an error if the URL is not a valid azure repo URL.\n   */\n  static fromRepoUrl(repoUrl: string): AzureUrl {\n    const url = new URL(repoUrl);\n\n    let owner;\n    let project;\n    let repo;\n\n    const parts = url.pathname.split('/').map(part => decodeURIComponent(part));\n    if (parts[2] === '_git') {\n      owner = parts[1];\n      project = repo = parts[3];\n    } else if (parts[3] === '_git') {\n      owner = parts[1];\n      project = parts[2];\n      repo = parts[4];\n    } else if (parts[4] === '_git') {\n      owner = `${parts[1]}/${parts[2]}`;\n      project = parts[3];\n      repo = parts[5];\n    }\n\n    if (!owner || !project || !repo) {\n      throw new Error('Azure URL must point to a git repository');\n    }\n\n    const path = url.searchParams.get('path') ?? undefined;\n\n    let ref;\n    const version = url.searchParams.get('version');\n    if (version) {\n      const prefix = version.slice(0, 2);\n      if (prefix !== 'GB') {\n        throw new Error('Azure URL version must point to a git branch');\n      }\n      ref = version.slice(2);\n    }\n\n    return new AzureUrl(url.origin, owner, project, repo, path, ref);\n  }\n\n  #origin: string;\n  #owner: string;\n  #project: string;\n  #repo: string;\n  #path?: string;\n  #ref?: string;\n\n  private constructor(\n    origin: string,\n    owner: string,\n    project: string,\n    repo: string,\n    path?: string,\n    ref?: string,\n  ) {\n    this.#origin = origin;\n    this.#owner = owner;\n    this.#project = project;\n    this.#repo = repo;\n    this.#path = path;\n    this.#ref = ref;\n  }\n\n  #baseUrl = (...parts: string[]): URL => {\n    const url = new URL(this.#origin);\n    url.pathname = parts.map(part => encodeURIComponent(part)).join('/');\n    return url;\n  };\n\n  /**\n   * Returns a repo URL that can be used to navigate to the resource in azure.\n   *\n   * Throws an error if the URL is not a valid azure repo URL.\n   */\n  toRepoUrl(): string {\n    let url;\n    if (this.#project === this.#repo) {\n      url = this.#baseUrl(this.#owner, '_git', this.#repo);\n    } else {\n      url = this.#baseUrl(this.#owner, this.#project, '_git', this.#repo);\n    }\n\n    if (this.#path) {\n      url.searchParams.set('path', this.#path);\n    }\n    if (this.#ref) {\n      url.searchParams.set('version', VERSION_PREFIX_GIT_BRANCH + this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the file download URL for this azure resource.\n   *\n   * Throws an error if the URL does not point to a file.\n   */\n  toFileUrl(): string {\n    if (!this.#path) {\n      throw new Error(\n        'Azure URL must point to a specific path to be able to download a file',\n      );\n    }\n\n    const url = this.#baseUrl(\n      this.#owner,\n      this.#project,\n      '_apis',\n      'git',\n      'repositories',\n      this.#repo,\n      'items',\n    );\n    url.searchParams.set('api-version', '6.0');\n    url.searchParams.set('path', this.#path);\n\n    if (this.#ref) {\n      url.searchParams.set('version', this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the archive download URL for this azure resource.\n   *\n   * Throws an error if the URL does not point to a repo.\n   */\n  toArchiveUrl(): string {\n    const url = this.#baseUrl(\n      this.#owner,\n      this.#project,\n      '_apis',\n      'git',\n      'repositories',\n      this.#repo,\n      'items',\n    );\n    url.searchParams.set('recursionLevel', 'full');\n    url.searchParams.set('download', 'true');\n    url.searchParams.set('api-version', '6.0');\n\n    if (this.#path) {\n      url.searchParams.set('scopePath', this.#path);\n    }\n    if (this.#ref) {\n      url.searchParams.set('version', this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the API url for fetching commits from a branch for this azure resource.\n   *\n   * Throws an error if the URL does not point to a commit.\n   */\n  toCommitsUrl(): string {\n    const url = this.#baseUrl(\n      this.#owner,\n      this.#project,\n      '_apis',\n      'git',\n      'repositories',\n      this.#repo,\n      'commits',\n    );\n    url.searchParams.set('api-version', '6.0');\n\n    if (this.#ref) {\n      url.searchParams.set('searchCriteria.itemVersion.version', this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the name of the owner, a user or an organization.\n   */\n  getOwner(): string {\n    return this.#owner;\n  }\n\n  /**\n   * Returns the name of the project.\n   */\n  getProject(): string {\n    return this.#project;\n  }\n\n  /**\n   * Returns the name of the repo.\n   */\n  getRepo(): string {\n    return this.#repo;\n  }\n\n  /**\n   * Returns the file path within the repo if the URL contains one.\n   */\n  getPath(): string | undefined {\n    return this.#path;\n  }\n\n  /**\n   * Returns the git ref in the repo if the URL contains one.\n   */\n  getRef(): string | undefined {\n    return this.#ref;\n  }\n}\n"],"names":[],"mappings":"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"}